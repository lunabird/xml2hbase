/* Generated By:JJTree: Do not edit this line. XQueryParserTreeConstants.java */

package com.fatdog.xmlEngine.javacc;

public interface XQueryParserTreeConstants
{
  public int JJTSTARTNODE = 0;
  public int JJTVOID = 1;
  public int JJTNAMESPACEDECL = 2;
  public int JJTDEFAULTNAMESPACEDECL = 3;
  public int JJTXMLSPACEPRESERVE = 4;
  public int JJTXMLSPACESTRIP = 5;
  public int JJTSEQ = 6;
  public int JJTFLWOR = 7;
  public int JJTFORLET = 8;
  public int JJTFOR = 9;
  public int JJTLET = 10;
  public int JJTWHERE = 11;
  public int JJTORDERBY = 12;
  public int JJTRETURN = 13;
  public int JJTSOME = 14;
  public int JJTEVERY = 15;
  public int JJTQIN = 16;
  public int JJTIFTHENELSE = 17;
  public int JJTOR = 18;
  public int JJTAND = 19;
  public int JJTVALUECOMP = 20;
  public int JJTGENERALCOMP = 21;
  public int JJTNODECOMP = 22;
  public int JJTORDERCOMP = 23;
  public int JJTRANGE = 24;
  public int JJTADDITIVE = 25;
  public int JJTMULTIPLICATIVE = 26;
  public int JJTUNARY = 27;
  public int JJTSLASHROOT = 28;
  public int JJTSLASHSLASHROOT = 29;
  public int JJTRELPATH = 30;
  public int JJTDOT = 31;
  public int JJTATTRIBUTE = 32;
  public int JJTPARENT = 33;
  public int JJTQNAME = 34;
  public int JJTTEXTTEST = 35;
  public int JJTNODETEST = 36;
  public int JJTFILTER = 37;
  public int JJTEMPTYTAG = 38;
  public int JJTTAG = 39;
  public int JJTATTRIBUTECONTENT = 40;
  public int JJTCHARREF = 41;
  public int JJTCHARDATA = 42;
  public int JJTCONTENT = 43;
  public int JJTENCLOSEDEXPR = 44;
  public int JJTVARIABLE = 45;
  public int JJTPARENS = 46;
  public int JJTINTEGERLIT = 47;
  public int JJTSTRINGLIT = 48;
  public int JJTDOUBLELIT = 49;
  public int JJTDECIMALLIT = 50;
  public int JJTFUNCTIONCALL = 51;


  public String[] jjtNodeName = {
    "StartNode",
    "void",
    "NamespaceDecl",
    "DefaultNamespaceDecl",
    "XmlSpacePreserve",
    "XmlSpaceStrip",
    "Seq",
    "FLWOR",
    "ForLet",
    "For",
    "Let",
    "Where",
    "OrderBy",
    "Return",
    "Some",
    "Every",
    "QIn",
    "IfThenElse",
    "Or",
    "And",
    "ValueComp",
    "GeneralComp",
    "NodeComp",
    "OrderComp",
    "Range",
    "Additive",
    "Multiplicative",
    "Unary",
    "SlashRoot",
    "SlashSlashRoot",
    "RelPath",
    "Dot",
    "Attribute",
    "Parent",
    "QName",
    "TextTest",
    "NodeTest",
    "Filter",
    "EmptyTag",
    "Tag",
    "AttributeContent",
    "CharRef",
    "CharData",
    "Content",
    "EnclosedExpr",
    "Variable",
    "Parens",
    "IntegerLit",
    "StringLit",
    "DoubleLit",
    "DecimalLit",
    "FunctionCall",
  };
}
